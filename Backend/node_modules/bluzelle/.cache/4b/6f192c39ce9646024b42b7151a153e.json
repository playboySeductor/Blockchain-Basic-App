{"id":"p5LL","dependencies":[{"name":"/Users/scott/work/bluzelle/blzjs/client/package.json","includedInParent":true,"mtime":1597439447381},{"name":"/Users/scott/work/bluzelle/blzjs/client/node_modules/typeforce/package.json","includedInParent":true,"mtime":1588045422485},{"name":"./native","loc":{"line":1,"column":21},"parent":"/Users/scott/work/bluzelle/blzjs/client/node_modules/typeforce/errors.js","resolved":"/Users/scott/work/bluzelle/blzjs/client/node_modules/typeforce/native.js"}],"generated":{"js":"var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/typeforce/errors.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/typeforce/errors.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}}],"sources":{"../node_modules/typeforce/errors.js":"var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n"},"lineCount":111}},"error":null,"hash":"9f023d706cd743ebccd1b84bf1c2bf01","cacheData":{"env":{}}}