{"ast":null,"code":"export default class Validator {\n  isValidPrice(price) {\n    if (isNaN(price)) {\n      return false;\n    }\n\n    if (price < 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isValidBidAmount(amount) {\n    if (isNaN(amount)) {\n      return false;\n    }\n\n    if (amount < 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isValidIncrement(increment) {\n    if (isNaN(increment)) {\n      return false;\n    }\n\n    if (increment < 0 || increment > 100) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isValidDuration(increment) {\n    if (isNaN(increment)) {\n      return false;\n    }\n\n    if (increment < 0 || increment > 168) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isValidName(name) {\n    if (!isNaN(name)) {\n      return false;\n    }\n\n    return true;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/src/utils/validator.js"],"names":["Validator","isValidPrice","price","isNaN","isValidBidAmount","amount","isValidIncrement","increment","isValidDuration","isValidName","name"],"mappings":"AAAA,eAAe,MAAMA,SAAN,CAAgB;AAC3BC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACf,QAAGC,KAAK,CAACD,KAAD,CAAR,EAAgB;AACZ,aAAO,KAAP;AACH;;AACD,QAAGA,KAAK,GAAG,CAAX,EAAa;AACT,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDE,EAAAA,gBAAgB,CAACC,MAAD,EAAQ;AACpB,QAAGF,KAAK,CAACE,MAAD,CAAR,EAAiB;AACb,aAAO,KAAP;AACH;;AACD,QAAGA,MAAM,GAAG,CAAZ,EAAc;AACV,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,gBAAgB,CAACC,SAAD,EAAW;AACvB,QAAGJ,KAAK,CAACI,SAAD,CAAR,EAAoB;AAChB,aAAO,KAAP;AACH;;AACD,QAAGA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,GAAhC,EAAoC;AAChC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,eAAe,CAACD,SAAD,EAAW;AACtB,QAAGJ,KAAK,CAACI,SAAD,CAAR,EAAoB;AAChB,aAAO,KAAP;AACH;;AACD,QAAGA,SAAS,GAAG,CAAZ,IAAiBA,SAAS,GAAG,GAAhC,EAAoC;AAChC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDE,EAAAA,WAAW,CAACC,IAAD,EAAM;AACb,QAAG,CAACP,KAAK,CAACO,IAAD,CAAT,EAAgB;AACZ,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AA9C0B","sourcesContent":["export default class Validator {\r\n    isValidPrice(price){\r\n        if(isNaN(price)){\r\n            return false;\r\n        }\r\n        if(price < 0){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidBidAmount(amount){\r\n        if(isNaN(amount)){\r\n            return false;\r\n        }\r\n        if(amount < 1){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidIncrement(increment){\r\n        if(isNaN(increment)){\r\n            return false;\r\n        }\r\n        if(increment < 0 || increment > 100){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidDuration(increment){\r\n        if(isNaN(increment)){\r\n            return false;\r\n        }\r\n        if(increment < 0 || increment > 168){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isValidName(name){\r\n        if(!isNaN(name)){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}