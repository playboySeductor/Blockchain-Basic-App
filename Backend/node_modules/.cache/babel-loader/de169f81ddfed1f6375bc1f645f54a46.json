{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nconst CID = require('cids');\n\nconst multipartRequest = require('../../lib/multipart-request');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n\nconst abortSignal = require('../../lib/abort-signal');\n\nconst _require = require('native-abort-controller'),\n      AbortController = _require.AbortController;\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, data, options = {}) {\n      var controller, signal, res, _yield$res$json, Hash;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // allow aborting requests on body errors\n            controller = new AbortController();\n            signal = abortSignal(controller.signal, options.signal); // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\n\n            _context.t0 = api;\n            _context.t1 = _objectSpread;\n            _context.t2 = {\n              timeout: options.timeout,\n              signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: \"\".concat(cid instanceof Uint8Array ? new CID(cid) : cid)\n              }, options))\n            };\n            _context.next = 7;\n            return multipartRequest(data, controller, options.headers);\n\n          case 7:\n            _context.t3 = _context.sent;\n            _context.t4 = (0, _context.t1)(_context.t2, _context.t3);\n            _context.next = 11;\n            return _context.t0.post.call(_context.t0, 'object/patch/append-data', _context.t4);\n\n          case 11:\n            res = _context.sent;\n            _context.next = 14;\n            return res.json();\n\n          case 14:\n            _yield$res$json = _context.sent;\n            Hash = _yield$res$json.Hash;\n            return _context.abrupt(\"return\", new CID(Hash));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/object/patch/append-data.js"],"names":["CID","require","multipartRequest","configure","toUrlSearchParams","abortSignal","AbortController","module","exports","api","cid","data","options","controller","signal","timeout","searchParams","arg","Uint8Array","headers","post","res","json","Hash"],"mappings":"AAAA;;;;;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,6BAAD,CAAhC;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAAjC;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,wBAAD,CAA3B;;iBAC4BA,OAAO,CAAC,yBAAD,C;MAA3BK,e,YAAAA,e;;AAERC,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;AAChC;AAAA,wEAAO,iBAAOC,GAAP,EAAYC,IAAZ,EAAkBC,OAAO,GAAG,EAA5B;AAAA;;AAAA;AAAA;AAAA;AACL;AACMC,YAAAA,UAFD,GAEc,IAAIP,eAAJ,EAFd;AAGCQ,YAAAA,MAHD,GAGUT,WAAW,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAHrB,EAKL;;AALK,0BAMaL,GANb;AAAA;AAAA;AAOHM,cAAAA,OAAO,EAAEH,OAAO,CAACG,OAPd;AAQHD,cAAAA,MARG;AASHE,cAAAA,YAAY,EAAEZ,iBAAiB;AAC7Ba,gBAAAA,GAAG,YAAKP,GAAG,YAAYQ,UAAf,GAA4B,IAAIlB,GAAJ,CAAQU,GAAR,CAA5B,GAA2CA,GAAhD;AAD0B,iBAE1BE,OAF0B;AAT5B;AAAA;AAAA,mBAcKV,gBAAgB,CAACS,IAAD,EAAOE,UAAP,EAAmBD,OAAO,CAACO,OAA3B,CAdrB;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMiBC,IANjB,mBAMsB,0BANtB;;AAAA;AAMCC,YAAAA,GAND;AAAA;AAAA,mBAkBkBA,GAAG,CAACC,IAAJ,EAlBlB;;AAAA;AAAA;AAkBGC,YAAAA,IAlBH,mBAkBGA,IAlBH;AAAA,6CAoBE,IAAIvB,GAAJ,CAAQuB,IAAR,CApBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAsBD,CAvByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst multipartRequest = require('../../lib/multipart-request')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\nconst abortSignal = require('../../lib/abort-signal')\nconst { AbortController } = require('native-abort-controller')\n\nmodule.exports = configure(api => {\n  return async (cid, data, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    // @ts-ignore https://github.com/ipfs/js-ipfs-utils/issues/90\n    const res = await api.post('object/patch/append-data', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest(data, controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return new CID(Hash)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}