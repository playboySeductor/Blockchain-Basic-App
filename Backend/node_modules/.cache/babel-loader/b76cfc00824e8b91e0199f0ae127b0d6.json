{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(addrs, options = {}) {\n      var res, _yield$res$json, Strings;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            addrs = Array.isArray(addrs) ? addrs : [addrs];\n            _context.next = 3;\n            return api.post('swarm/disconnect', {\n              timeout: options.timeout,\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: addrs.map(addr => \"\".concat(addr))\n              }, options)),\n              headers: options.headers\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            _yield$res$json = _context.sent;\n            Strings = _yield$res$json.Strings;\n            return _context.abrupt(\"return\", Strings || []);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/swarm/disconnect.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","addrs","options","Array","isArray","post","timeout","signal","searchParams","arg","map","addr","headers","res","json","Strings"],"mappings":"AAAA;;;;;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AAAA,wEAAO,iBAAOC,KAAP,EAAcC,OAAO,GAAG,EAAxB;AAAA;;AAAA;AAAA;AAAA;AACLD,YAAAA,KAAK,GAAGE,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAvC;AADK;AAAA,mBAGaD,GAAG,CAACK,IAAJ,CAAS,kBAAT,EAA6B;AAC7CC,cAAAA,OAAO,EAAEJ,OAAO,CAACI,OAD4B;AAE7CC,cAAAA,MAAM,EAAEL,OAAO,CAACK,MAF6B;AAG7CC,cAAAA,YAAY,EAAEX,iBAAiB;AAC7BY,gBAAAA,GAAG,EAAER,KAAK,CAACS,GAAN,CAAUC,IAAI,cAAOA,IAAP,CAAd;AADwB,iBAE1BT,OAF0B,EAHc;AAO7CU,cAAAA,OAAO,EAAEV,OAAO,CAACU;AAP4B,aAA7B,CAHb;;AAAA;AAGCC,YAAAA,GAHD;AAAA;AAAA,mBAYqBA,GAAG,CAACC,IAAJ,EAZrB;;AAAA;AAAA;AAYGC,YAAAA,OAZH,mBAYGA,OAZH;AAAA,6CAcEA,OAAO,IAAI,EAdb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAjByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (addrs, options = {}) => {\n    addrs = Array.isArray(addrs) ? addrs : [addrs]\n\n    const res = await api.post('swarm/disconnect', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addrs.map(addr => `${addr}`),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n})\n"]},"metadata":{},"sourceType":"script"}