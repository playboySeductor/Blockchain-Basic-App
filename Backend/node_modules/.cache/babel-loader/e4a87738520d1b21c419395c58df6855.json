{"ast":null,"code":"'use strict';\n\nconst varint = require('varint');\n\nconst encoder = require('./encoder');\n\nfunction bytesBufferLength(val) {\n  return val.byteLength;\n}\n\nfunction bytesEncodingLength(val) {\n  const len = bytesBufferLength(val);\n  return varint.encodingLength(len) + len;\n}\n\nfunction bytesEncode(val, buffer, dataView, offset) {\n  const oldOffset = offset;\n  const len = bytesBufferLength(val);\n  varint.encode(len, buffer, offset);\n  offset += varint.encode.bytes;\n  buffer.set(val, offset);\n  offset += len;\n  bytesEncode.bytes = offset - oldOffset;\n}\n\nfunction bytesDecode(buffer, dataView, offset) {\n  const oldOffset = offset;\n  const len = varint.decode(buffer, offset);\n  offset += varint.decode.bytes;\n  const val = buffer.slice(offset, offset + len);\n  offset += val.length;\n  bytesDecode.bytes = offset - oldOffset;\n  return val;\n}\n\nmodule.exports = encoder(2, bytesEncode, bytesDecode, bytesEncodingLength);","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/protons/src/compile/encodings/bytes.js"],"names":["varint","require","encoder","bytesBufferLength","val","byteLength","bytesEncodingLength","len","encodingLength","bytesEncode","buffer","dataView","offset","oldOffset","encode","bytes","set","bytesDecode","decode","slice","length","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASE,iBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,SAAOA,GAAG,CAACC,UAAX;AACD;;AAED,SAASC,mBAAT,CAA8BF,GAA9B,EAAmC;AACjC,QAAMG,GAAG,GAAGJ,iBAAiB,CAACC,GAAD,CAA7B;AACA,SAAOJ,MAAM,CAACQ,cAAP,CAAsBD,GAAtB,IAA6BA,GAApC;AACD;;AAED,SAASE,WAAT,CAAsBL,GAAtB,EAA2BM,MAA3B,EAAmCC,QAAnC,EAA6CC,MAA7C,EAAqD;AACnD,QAAMC,SAAS,GAAGD,MAAlB;AACA,QAAML,GAAG,GAAGJ,iBAAiB,CAACC,GAAD,CAA7B;AAEAJ,EAAAA,MAAM,CAACc,MAAP,CAAcP,GAAd,EAAmBG,MAAnB,EAA2BE,MAA3B;AACAA,EAAAA,MAAM,IAAIZ,MAAM,CAACc,MAAP,CAAcC,KAAxB;AAEAL,EAAAA,MAAM,CAACM,GAAP,CAAWZ,GAAX,EAAgBQ,MAAhB;AACAA,EAAAA,MAAM,IAAIL,GAAV;AAEAE,EAAAA,WAAW,CAACM,KAAZ,GAAoBH,MAAM,GAAGC,SAA7B;AACD;;AAED,SAASI,WAAT,CAAsBP,MAAtB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgD;AAC9C,QAAMC,SAAS,GAAGD,MAAlB;AAEA,QAAML,GAAG,GAAGP,MAAM,CAACkB,MAAP,CAAcR,MAAd,EAAsBE,MAAtB,CAAZ;AACAA,EAAAA,MAAM,IAAIZ,MAAM,CAACkB,MAAP,CAAcH,KAAxB;AAEA,QAAMX,GAAG,GAAGM,MAAM,CAACS,KAAP,CAAaP,MAAb,EAAqBA,MAAM,GAAGL,GAA9B,CAAZ;AACAK,EAAAA,MAAM,IAAIR,GAAG,CAACgB,MAAd;AAEAH,EAAAA,WAAW,CAACF,KAAZ,GAAoBH,MAAM,GAAGC,SAA7B;AAEA,SAAOT,GAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBpB,OAAO,CAAC,CAAD,EAAIO,WAAJ,EAAiBQ,WAAjB,EAA8BX,mBAA9B,CAAxB","sourcesContent":["'use strict'\n\nconst varint = require('varint')\nconst encoder = require('./encoder')\n\nfunction bytesBufferLength (val) {\n  return val.byteLength\n}\n\nfunction bytesEncodingLength (val) {\n  const len = bytesBufferLength(val)\n  return varint.encodingLength(len) + len\n}\n\nfunction bytesEncode (val, buffer, dataView, offset) {\n  const oldOffset = offset\n  const len = bytesBufferLength(val)\n\n  varint.encode(len, buffer, offset)\n  offset += varint.encode.bytes\n\n  buffer.set(val, offset)\n  offset += len\n\n  bytesEncode.bytes = offset - oldOffset\n}\n\nfunction bytesDecode (buffer, dataView, offset) {\n  const oldOffset = offset\n\n  const len = varint.decode(buffer, offset)\n  offset += varint.decode.bytes\n\n  const val = buffer.slice(offset, offset + len)\n  offset += val.length\n\n  bytesDecode.bytes = offset - oldOffset\n\n  return val\n}\n\nmodule.exports = encoder(2, bytesEncode, bytesDecode, bytesEncodingLength)\n"]},"metadata":{},"sourceType":"script"}