{"ast":null,"code":"var _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nconst BufferList = require('bl/BufferList');\n\nconst TypeDefault = {\n  string: () => '',\n  buffer: () => BufferList()\n};\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source, options) {\n    var res, type, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = options || {};\n\n          if (!(options.type && !TypeDefault[options.type])) {\n            _context.next = 3;\n            break;\n          }\n\n          throw new Error(\"invalid type \\\"\".concat(options.type, \"\\\"\"));\n\n        case 3:\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _context.prev = 5;\n          _iterator = _asyncIterator(source);\n\n        case 7:\n          _context.next = 9;\n          return _iterator.next();\n\n        case 9:\n          _step = _context.sent;\n          _iteratorNormalCompletion = _step.done;\n          _context.next = 13;\n          return _step.value;\n\n        case 13:\n          _value = _context.sent;\n\n          if (_iteratorNormalCompletion) {\n            _context.next = 21;\n            break;\n          }\n\n          chunk = _value;\n\n          if (!res) {\n            type = options.type || typeof chunk === 'string' ? 'string' : 'buffer';\n            res = TypeDefault[type]();\n          }\n\n          if (type === 'string') {\n            res += chunk;\n          } else {\n            res.append(chunk);\n          }\n\n        case 18:\n          _iteratorNormalCompletion = true;\n          _context.next = 7;\n          break;\n\n        case 21:\n          _context.next = 27;\n          break;\n\n        case 23:\n          _context.prev = 23;\n          _context.t0 = _context[\"catch\"](5);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 27:\n          _context.prev = 27;\n          _context.prev = 28;\n\n          if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n            _context.next = 32;\n            break;\n          }\n\n          _context.next = 32;\n          return _iterator.return();\n\n        case 32:\n          _context.prev = 32;\n\n          if (!_didIteratorError) {\n            _context.next = 35;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 35:\n          return _context.finish(32);\n\n        case 36:\n          return _context.finish(27);\n\n        case 37:\n          return _context.abrupt(\"return\", res || TypeDefault[options.type || 'buffer']());\n\n        case 38:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[5, 23, 27, 37], [28,, 32, 36]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/it-concat/index.js"],"names":["BufferList","require","TypeDefault","string","buffer","module","exports","source","options","type","Error","chunk","res","append"],"mappings":";;;;;;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,MAAM,EADI;AAElBC,EAAAA,MAAM,EAAE,MAAMJ,UAAU;AAFN,CAApB;;AAKAK,MAAM,CAACC,OAAP;AAAA,sEAAiB,iBAAOC,MAAP,EAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AACfA,UAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AADe,gBAGXA,OAAO,CAACC,IAAR,IAAgB,CAACP,WAAW,CAACM,OAAO,CAACC,IAAT,CAHjB;AAAA;AAAA;AAAA;;AAAA,gBAIP,IAAIC,KAAJ,0BAA2BF,OAAO,CAACC,IAAnC,QAJO;;AAAA;AAAA;AAAA;AAAA;AAAA,qCAQWF,MARX;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAQEI,UAAAA,KARF;;AASb,cAAI,CAACC,GAAL,EAAU;AACRH,YAAAA,IAAI,GAAGD,OAAO,CAACC,IAAR,IAAgB,OAAOE,KAAP,KAAiB,QAAjC,GAA4C,QAA5C,GAAuD,QAA9D;AACAC,YAAAA,GAAG,GAAGV,WAAW,CAACO,IAAD,CAAX,EAAN;AACD;;AAED,cAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBG,YAAAA,GAAG,IAAID,KAAP;AACD,WAFD,MAEO;AACLC,YAAAA,GAAG,CAACC,MAAJ,CAAWF,KAAX;AACD;;AAlBY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,2CAqBRC,GAAG,IAAIV,WAAW,CAACM,OAAO,CAACC,IAAR,IAAgB,QAAjB,CAAX,EArBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const BufferList = require('bl/BufferList')\n\nconst TypeDefault = {\n  string: () => '',\n  buffer: () => BufferList()\n}\n\nmodule.exports = async (source, options) => {\n  options = options || {}\n\n  if (options.type && !TypeDefault[options.type]) {\n    throw new Error(`invalid type \"${options.type}\"`)\n  }\n\n  let res, type\n  for await (const chunk of source) {\n    if (!res) {\n      type = options.type || typeof chunk === 'string' ? 'string' : 'buffer'\n      res = TypeDefault[type]()\n    }\n\n    if (type === 'string') {\n      res += chunk\n    } else {\n      res.append(chunk)\n    }\n  }\n\n  return res || TypeDefault[options.type || 'buffer']()\n}\n"]},"metadata":{},"sourceType":"script"}