{"ast":null,"code":"import _objectSpread from \"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\SAINIK\\\\Desktop\\\\LEARNING BTC\\\\NFT-Auction-Marketplace\\\\src\\\\pages\\\\MarketPlaceSell.js\";\nimport { MDBAnimation, MDBBtn, MDBCard, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow } from 'mdbreact';\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Validator from '../utils/validator';\nimport HashHelper from '../utils/hashHelper';\nimport ArtAlert from '../components/ArtAlert';\nimport LightBox from '../components/LightBox';\nimport ipfs from '../ipfs.js';\nimport HelperFunctions from '../utils/Util';\nimport Spinner from '../components/Spinner';\nimport ArtListItem from '../components/ArtListItem';\nimport '../styles/sidebar.scss';\nimport '../styles/drop-file.scss';\nimport { util } from 'chai';\nimport TimeAgo from 'javascript-time-ago';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MarketPlaceSell extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.componentWillMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var contract, util, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            contract = _this.state.contract;\n\n            if (contract) {\n              _context.next = 7;\n              break;\n            }\n\n            util = new HelperFunctions();\n            _context.next = 5;\n            return util.reloadContractAndAccounts();\n\n          case 5:\n            response = _context.sent;\n\n            _this.setState({\n              web3: response.web3,\n              accounts: response.accounts,\n              contract: response.contract,\n              priceContract: response.priceFeed\n            });\n\n          case 7:\n            _this.getMaticPriceFeed();\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.handleChange = event => {\n      event.preventDefault();\n      let key = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [key]: value\n      });\n\n      if (key === 'price') {\n        let USDprice = value * this.state.ONE_MATIC;\n        this.setState({\n          PRICE_TO_USD: USDprice\n        });\n      }\n    };\n\n    this.getFileBuffer = () => {\n      console.log('file loaded');\n\n      if (this.state.file) {\n        var file = this.state.file;\n        var reader = new FileReader(); //Convert to a buffer\n\n        reader.readAsArrayBuffer(file); //Parse file\n\n        reader.onload = () => {\n          this.convertToBuffer(reader); //Fired after reading operation is completed                            \n        };\n      }\n    };\n\n    this.convertToBuffer = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              buffer = Buffer(reader.result);\n\n              _this.setState({\n                buffer\n              }, console.log('file buffer', buffer));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.resetFileSelection = () => {\n      this.setState({\n        buffer: null\n      });\n      this.setState({\n        file: null\n      });\n    };\n\n    this.onFetchMyArtItems = event => {\n      event.preventDefault();\n      this.fetchMyArtItems();\n      event.stopPropagation();\n    };\n\n    this.getMaticPriceFeed = () => {\n      // 1MATIC = 0.1949 USD (28-02-2021 2:28pm)       \n      //TEST NET\n      const contract = this.state.priceContract;\n      if (!this.state.accounts) return;\n      const account = this.state.accounts[0];\n      contract.methods.getLatestPrice().call({\n        from: account\n      }).then(result => {\n        this.setState({\n          ONE_MATIC: (result / 100000000).toFixed(8)\n        }, console.log('price feed response', this.state.ONE_MATIC));\n      }).catch(error => {\n        console.log('getmaticPriceFeed error', error);\n      });\n    };\n\n    this.fetchMyArtItems = () => {\n      console.log(\"fetch my art items method\");\n      this.setState(prevState => ({\n        loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n          fetchMyArtItems: true\n        })\n      }));\n      const contract = this.state.contract;\n      if (!this.state.accounts) return;\n      const account = this.state.accounts[0]; // get added items through events emitted\n\n      contract.getPastEvents('LogAddItem', {\n        filter: {\n          seller: account\n        },\n        fromBlock: 0,\n        toBlock: 'latest'\n      }, (error, events) => {\n        if (!error) {\n          console.log('events', events);\n          let oldMyAuctionedItems = [];\n          events.forEach(event => {\n            let itemId = event.returnValues[0];\n            let name = event.returnValues[1];\n            let seller = event.returnValues[2];\n            let price = event.returnValues[3];\n            let created = event.returnValues[4];\n            let expiry = event.returnValues[5]; //check for existing bids on item, and update price with current highest bid on the item\n            //address indexed bidder, uint indexed artItemId, uint bid, address indexed highestBidder, uint highestBid, uint highestBindingBid);  \n\n            contract.getPastEvents('LogBid', {\n              filter: {\n                artItemId: itemId\n              },\n              fromBlock: 0,\n              toBlock: 'latest'\n            }, (error, events) => {\n              if (!error) {\n                console.log('events', events); //pick the last bid on item\n\n                let lastBid = events[events.length - 1];\n\n                if (lastBid) {\n                  let lastBidCurrentHighestBid = lastBid.returnValues[4];\n\n                  if (lastBidCurrentHighestBid) {\n                    price = lastBidCurrentHighestBid;\n                  }\n                }\n              }\n            }); // check auction status\n\n            let response = this.getArtItem(itemId);\n            response.then(result => {\n              console.log('get art ', result);\n\n              if (result) {\n                let isCancelled = result[6];\n                console.log('item cancel status: ' + name, isCancelled);\n\n                if (!isCancelled) {\n                  oldMyAuctionedItems.push({\n                    itemId: itemId,\n                    name: name,\n                    owner: seller,\n                    price: price,\n                    created: created,\n                    expiry: expiry\n                  });\n                }\n              }\n\n              this.setState({\n                myAuctionedItems: oldMyAuctionedItems\n              }, console.log('myAuctionedItems: ', this.state.myAuctionedItems));\n            }).catch(error => {\n              console.log('get art item for fetchMyArtItems error', error);\n            });\n          });\n        } else {\n          console.log(error);\n        }\n\n        this.setState(prevState => ({\n          loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n            fetchMyArtItems: false\n          })\n        }));\n      });\n    };\n\n    this.resetMessage = () => {\n      let errors = Object.keys(this.state.error);\n\n      for (var propIndex in errors) {\n        let prop = errors[propIndex];\n        console.log(prop);\n        this.setState(prevState => ({\n          error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n            [prop]: ''\n          })\n        })); //console.log(this.state.error);\n      } //this.setState({success: null});\n\n    };\n\n    this.resetInputs = () => {\n      this.setState({\n        price: 0\n      });\n      this.setState({\n        duration: 0\n      });\n      this.setState({\n        increment: 0\n      });\n      this.setState({\n        name: ''\n      });\n    };\n\n    this.resetDocumentSelection = () => {\n      this.setState({\n        buffer: null\n      });\n      this.setState({\n        file: null\n      });\n    };\n\n    this.onIPFSSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var price, increment, duration, name, validator, bufferData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault(); // this.resetMessage();\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: true\n                })\n              }));\n\n              console.log(\"Submitting file to ipfs\");\n              price = _this.state.price;\n              increment = _this.state.increment;\n              duration = _this.state.duration;\n              name = _this.state.name;\n\n              if (_this.state.accounts) {\n                _context3.next = 11;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Your account is not yet loaded. You may refresh page of it persists.'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 11:\n              if (!(!increment || !duration || !price || name === '')) {\n                _context3.next = 15;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Incomplete Details — All fields are required!'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 15:\n              // validate data\n              validator = new Validator();\n\n              if (validator.isValidPrice(price)) {\n                _context3.next = 20;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Invalid Price — Minimum auction price must be a number that is not less than 0!'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 20:\n              if (validator.isValidIncrement(increment)) {\n                _context3.next = 24;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Invalid Increment — Increment must be a number between 0-100!'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 24:\n              if (validator.isValidDuration(duration)) {\n                _context3.next = 28;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Invalid Duration — Auction duration (in hours) must be a number between 1-168!'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 28:\n              if (validator.isValidName(name)) {\n                _context3.next = 32;\n                break;\n              }\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Invalid Name — Art name cannot be a number!'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 32:\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  uploadFile: true\n                })\n              }));\n\n              if (!_this.state.file) {\n                _this.setState(prevState => ({\n                  error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                    uploadFile: 'Invalid File Selection — Please re-select your art file'\n                  })\n                }));\n              }\n\n              bufferData = _this.state.buffer;\n              console.log('bufferData', bufferData);\n\n              if (!bufferData) {\n                _context3.next = 41;\n                break;\n              }\n\n              ipfs.add(bufferData).then(ipfsHash => {\n                console.log(ipfsHash);\n\n                _this.setState({\n                  ipfsHash: ipfsHash.path\n                });\n\n                _this.setState({\n                  ipfsMultiHash: ipfsHash.cid.multihash\n                });\n\n                _this.setState(prevState => ({\n                  loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                    uploadFile: false\n                  })\n                }), _this.resetDocumentSelection()); //TODO: send to blockchain\n\n\n                _this.addArtItem(); // this.setState(prevState => ({\n                //     success: {\n                //         ...prevState.success,\n                //         uploadFile: 'Your Art has been successfully added!'\n                // }})); \n\n\n                _this.resetInputs();\n\n                console.log('complete ipfs upload');\n              }).catch(err => {\n                console.log(err);\n\n                _this.setState(prevState => ({\n                  error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                    uploadFile: 'Error occured while uploading art to IPFS. Check your connection or Reload the page and try again.'\n                  })\n                }));\n              });\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              _context3.next = 46;\n              break;\n\n            case 41:\n              console.log('no file was selected. reload page and re-select file');\n\n              _this.setState(prevState => ({\n                error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n                  uploadFile: 'Invalid File Selection — Please re-select your art file'\n                })\n              }));\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  uploadFile: false\n                })\n              }), _this.resetDocumentSelection());\n\n              _this.setState(prevState => ({\n                loading: _objectSpread(_objectSpread({}, prevState.loading), {}, {\n                  addItemBtn: false\n                })\n              }));\n\n              return _context3.abrupt(\"return\");\n\n            case 46:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.getArtItem = itemId => {\n      console.log(\"get bid method\");\n      const contract = this.state.contract;\n      if (!this.state.accounts) return;\n      const account = this.state.accounts[0];\n      console.log('open art item');\n      console.log('contract', contract);\n      console.log('accout', account);\n      console.log(itemId);\n      return contract.methods.getArtItem(itemId).call({\n        from: account\n      });\n    };\n\n    this.OnCloseLightBox = () => {\n      this.setState({\n        showFileLightBox: false\n      });\n    };\n\n    this.openArt = (itemId, ipfsHash, name) => event => {\n      let hashHelper = new HashHelper();\n      event.stopPropagation(); // console.log('open art item');\n\n      console.log('open art details', ipfsHash, name);\n\n      if (ipfsHash && name) {\n        // just added art\n        console.log('open new added art');\n        console.log(ipfsHash, name);\n        let ref = hashHelper.getIpfsHashFromBytes32(ipfsHash);\n        this.setState({\n          artToView: {\n            ipfsHash: ref,\n            name: name\n          }\n        }, this.setState({\n          showFileLightBox: true\n        }));\n      } else {\n        //fetched arts\n        //get art name and ipfs hash\n        let response = this.getArtItem(itemId);\n        response.then(result => {\n          console.log('get art ', result);\n\n          if (result) {\n            let artName = result[7];\n            let artIPFShash = result[2];\n            let ref = hashHelper.getIpfsHashFromBytes32(artIPFShash);\n            this.setState({\n              artToView: {\n                ipfsHash: ref,\n                name: artName\n              }\n            }, this.setState({\n              showFileLightBox: true\n            }));\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.cancelAuction = itemId => event => {\n      event.preventDefault();\n      let contract = this.state.contract;\n\n      if (typeof contract === 'string' && typeof contract !== 'object' && typeof contract !== null) {\n        contract = JSON.parse(contract);\n      }\n\n      console.log('cancel aution contract', contract);\n      const account = this.state.accounts[0];\n      console.log('cancel aution account', account);\n      let response = contract.methods.cancelAuction(itemId).send({\n        from: account\n      });\n      response.then(result => {\n        console.log('cancel aution: ', result);\n\n        if (result.status && result.events.LogCanceled) {\n          this.setState(prevState => ({\n            success: _objectSpread(_objectSpread({}, prevState.success), {}, {\n              cancelAuction: 'Success — Auction was successfully canceled!'\n            })\n          })); //remove from UI\n\n          let itemIndex = this.state.myAuctionedItems.findIndex(item => item.itemId === itemId);\n\n          if (itemIndex > -1) {\n            let myAuctions = this.state.myAuctionedItems;\n            myAuctions.splice(itemIndex, 1);\n            this.setState({\n              myAuctionedItems: myAuctions\n            });\n          }\n        } else {\n          this.setState(prevState => ({\n            error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n              cancelAuction: 'Error — A minor error occured. Take a look at the log'\n            })\n          }));\n        }\n      }).catch(error => {\n        console.log('cancel aution error: ', error);\n        this.setState(prevState => ({\n          error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n            cancelAuction: error.message\n          })\n        }));\n      });\n      event.stopPropagation();\n    };\n\n    this.state = {\n      accounts: this.props.baseAppState.accounts,\n      contract: this.props.baseAppState.contract,\n      priceContract: this.props.baseAppState.priceFeed,\n      file: null,\n      buffer: null,\n      price: 0,\n      increment: 0,\n      ONE_MATIC: 0,\n      //USD\n      PRICE_TO_USD: 0,\n      //USD\n      name: '',\n      duration: 0,\n      artToView: {},\n      ipfsHash: '',\n      //final hash\n      ipfsMultiHash: null,\n      artHash: [],\n      myAuctionedItems: [],\n      showFileLightBox: false,\n      loading: {\n        uploadFile: false,\n        addItemBtn: false,\n        fetchMyArtItems: false\n      },\n      error: {\n        uploadFile: '',\n        auctionedItems: '',\n        cancelAuction: ''\n      },\n      success: {\n        uploadFile: '',\n        auctionedItems: '',\n        cancelAuction: ''\n      }\n    };\n    this.fetchMyArtItems();\n    this.getFileBuffer = this.getFileBuffer.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.openArt = this.openArt.bind(this);\n    this.cancelAuction = this.cancelAuction.bind(this);\n    this.onFetchMyArtItems = this.onFetchMyArtItems.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.accounts) {\n      this.setState({\n        accounts: localStorage.getItem('accounts')\n      });\n    } // if(!this.state.contract){\n    //     this.setState({contract: localStorage.getItem('contract')});\n    // }\n\n  }\n\n  componentDidUpdate() {\n    // if(!this.state.accounts){\n    //     this.setState({accounts: this.props.baseAppState.accounts});\n    // }\n    setInterval(() => {\n      if (!this.state.contract) {\n        window.location.href = '/marketplace/sell';\n      }\n    }, 5000); // \n    // console.log('contract', this.props.baseAppState.contract);\n  }\n\n  addArtItem() {\n    let contract = this.state.contract;\n\n    if (typeof contract === 'string' && typeof contract !== 'object' && typeof contract !== null) {\n      contract = JSON.parse(contract);\n    }\n\n    console.log('add item contract', contract);\n    const account = this.state.accounts[0];\n    console.log('add item account', account);\n    let hashHelper = new HashHelper();\n    let util = new HelperFunctions();\n    let IPFShash = hashHelper.getBytes32FromIpfsHash(this.state.ipfsHash);\n    let price = this.state.price;\n    let increment = this.state.increment;\n    let name = this.state.name;\n    let duration = util.ConvertHoursToSeconds(this.state.duration);\n\n    if (isNaN(price) || isNaN(duration) || isNaN(increment) || !isNaN(name)) {\n      console.log(\"invalid input was detected!\");\n      return null;\n    }\n\n    console.log('art item details:: ', name, IPFShash, price, increment, duration);\n    let response = contract.methods.addArtItem(price, IPFShash, increment, duration, name).send({\n      from: account\n    });\n    response.then(result => {\n      console.log('add art: ', result);\n\n      if (result.status && result.events.LogAddItem) {\n        let oldMyAuctionedItems = this.state.myAuctionedItems;\n        oldMyAuctionedItems.push({\n          name: name,\n          ipfs: this.state.ipfsHash,\n          price: price,\n          increment: increment,\n          created: util.GetUNIXTimeFromDate(Date.now()),\n          expiry: duration\n        });\n        this.setState({\n          myAuctionedItems: oldMyAuctionedItems\n        });\n        this.setState(prevState => ({\n          success: _objectSpread(_objectSpread({}, prevState.success), {}, {\n            uploadFile: 'Success — New Art Item was added successfully!'\n          })\n        }));\n      } else {\n        this.setState(prevState => ({\n          error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n            uploadFile: 'Error — A minor error occured. Take a look at the log'\n          })\n        }));\n      }\n    }).catch(error => {\n      console.log('add art item error: ', error);\n      this.setState(prevState => ({\n        error: _objectSpread(_objectSpread({}, prevState.error), {}, {\n          uploadFile: error.message\n        })\n      }));\n    });\n  }\n\n  render() {\n    let util = new HelperFunctions();\n    const timeAgo = new TimeAgo('en-US');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.showFileLightBox ? /*#__PURE__*/_jsxDEV(LightBox, {\n        toView: this.state.artToView,\n        closeLightBoxCallback: this.OnCloseLightBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(MDBContainer, {\n        className: \"page-container\",\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drop-file \".concat(this.state.file ? \"file-loaded\" : \"\"),\n              children: /*#__PURE__*/_jsxDEV(MDBAnimation, {\n                type: \"bounce-in\",\n                children: /*#__PURE__*/_jsxDEV(Dropzone, {\n                  onDrop: acceptedFiles => this.setState({\n                    file: acceptedFiles[0]\n                  }, this.getFileBuffer),\n                  children: ({\n                    getRootProps,\n                    getInputProps\n                  }) => /*#__PURE__*/_jsxDEV(MDBCard, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n                    children: /*#__PURE__*/_jsxDEV(\"section\", {\n                      className: \"m-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(MDBIcon, {\n                        icon: \"cloud-upload-alt\",\n                        size: \"4x\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"\",\n                        children: this.state.file ? \"File loaded. Fill the Art Auction Information\" : /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Drag 'n' drop your art file HERE,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 173\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 179\n                          }, this), \"OR\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 187\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 193\n                          }, this), \"Click to select\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 617,\n                          columnNumber: 134\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 617,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 45\n                    }, this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"6\",\n            className: \"px-4\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Marketplace Sell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Art Auction Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                children: [this.state.error.uploadFile ? /*#__PURE__*/_jsxDEV(ArtAlert, {\n                  onCloseCallback: this.resetMessage,\n                  type: \"danger\",\n                  message: this.state.error.uploadFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 37\n                }, this) : null, this.state.success.uploadFile ? /*#__PURE__*/_jsxDEV(ArtAlert, {\n                  onCloseCallback: this.resetMessage,\n                  type: \"success\",\n                  message: this.state.success.uploadFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 33\n                }, this) : null, this.state.error.cancelAuction ? /*#__PURE__*/_jsxDEV(ArtAlert, {\n                  onCloseCallback: this.resetMessage,\n                  type: \"danger\",\n                  message: this.state.error.cancelAuction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 37\n                }, this) : null, this.state.success.cancelAuction ? /*#__PURE__*/_jsxDEV(ArtAlert, {\n                  onCloseCallback: this.resetMessage,\n                  type: \"success\",\n                  message: this.state.success.cancelAuction\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 33\n                }, this) : null, /*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"name\",\n                    className: \"grey-text mt-2\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: this.state.name,\n                    onChange: this.handleChange,\n                    id: \"name\",\n                    name: \"name\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"minPrice\",\n                    className: \"grey-text mt-2\",\n                    children: \"Min. Price (MATIC)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"usd-price\",\n                    children: [\" ~ \", new Intl.NumberFormat().format(this.state.PRICE_TO_USD.toFixed(2)), \" USD\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: this.state.price,\n                    min: 0,\n                    onChange: this.handleChange,\n                    id: \"minPrice\",\n                    name: \"price\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"increment\",\n                    className: \"grey-text mt-2\",\n                    children: \"Increment (1-100)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: this.state.increment,\n                    min: 0,\n                    onChange: this.handleChange,\n                    id: \"increment\",\n                    name: \"increment\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                  md: \"6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"duration\",\n                    className: \"grey-text mt-2\",\n                    children: \"Auction Duration (in hours:: 0-168)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: this.state.duration,\n                    min: 0,\n                    onChange: this.handleChange,\n                    id: \"duration\",\n                    name: \"duration\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                  className: \"mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    onClick: this.onIPFSSubmit,\n                    block: true,\n                    color: \"info\",\n                    children: this.state.loading.addItemBtn || this.state.loading.uploadFile ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 159\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Add Art Item\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 185\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            md: \"3\",\n            style: {\n              marginTop: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"My Auctioned Arts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"art-side-bar-wrapper pr-2\",\n              children: this.state.myAuctionedItems && this.state.myAuctionedItems.length > 0 ? this.state.myAuctionedItems.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"cancel-auction-btn\",\n                    onClick: this.cancelAuction(item.itemId),\n                    children: \"CANCEL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: this.openArt(item.itemId, item.ipfs, item.name),\n                    children: /*#__PURE__*/_jsxDEV(ArtListItem, {\n                      artTitle: item.name,\n                      currentHighestBid: item.price,\n                      timeLeft: timeAgo.format(util.GetDateFromUNIXTime(Number(item.created) + Number(item.expiry)), 'twitter') // onCancelCallback={this.cancelAuction(item.itemId)}                                        \n\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 690,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true);\n              }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"You currently have no auctioned items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  onClick: this.onFetchMyArtItems,\n                  block: true,\n                  color: \"info\",\n                  children: this.state.loading.fetchMyArtItems ? /*#__PURE__*/_jsxDEV(Spinner, {\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 132\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Manually Fetch Art Items\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 158\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MarketPlaceSell;","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/src/pages/MarketPlaceSell.js"],"names":["MDBAnimation","MDBBtn","MDBCard","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBRow","React","Component","Dropzone","Validator","HashHelper","ArtAlert","LightBox","ipfs","HelperFunctions","Spinner","ArtListItem","util","TimeAgo","MarketPlaceSell","constructor","props","componentWillMount","contract","state","reloadContractAndAccounts","response","setState","web3","accounts","priceContract","priceFeed","getMaticPriceFeed","handleChange","event","preventDefault","key","target","name","value","USDprice","ONE_MATIC","PRICE_TO_USD","getFileBuffer","console","log","file","reader","FileReader","readAsArrayBuffer","onload","convertToBuffer","buffer","Buffer","result","resetFileSelection","onFetchMyArtItems","fetchMyArtItems","stopPropagation","account","methods","getLatestPrice","call","from","then","toFixed","catch","error","prevState","loading","getPastEvents","filter","seller","fromBlock","toBlock","events","oldMyAuctionedItems","forEach","itemId","returnValues","price","created","expiry","artItemId","lastBid","length","lastBidCurrentHighestBid","getArtItem","isCancelled","push","owner","myAuctionedItems","resetMessage","errors","Object","keys","propIndex","prop","resetInputs","duration","increment","resetDocumentSelection","onIPFSSubmit","addItemBtn","uploadFile","validator","isValidPrice","isValidIncrement","isValidDuration","isValidName","bufferData","add","ipfsHash","path","ipfsMultiHash","cid","multihash","addArtItem","err","OnCloseLightBox","showFileLightBox","openArt","hashHelper","ref","getIpfsHashFromBytes32","artToView","artName","artIPFShash","cancelAuction","JSON","parse","send","status","LogCanceled","success","itemIndex","findIndex","item","myAuctions","splice","message","baseAppState","artHash","auctionedItems","bind","componentDidMount","localStorage","getItem","componentDidUpdate","setInterval","window","location","href","IPFShash","getBytes32FromIpfsHash","ConvertHoursToSeconds","isNaN","LogAddItem","GetUNIXTimeFromDate","Date","now","render","timeAgo","acceptedFiles","getRootProps","getInputProps","Intl","NumberFormat","format","marginTop","map","index","GetDateFromUNIXTime","Number"],"mappings":"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","sourcesContent":["import { MDBAnimation, MDBBtn, MDBCard, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBRow } from 'mdbreact';\r\nimport React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport Validator from '../utils/validator';\r\nimport HashHelper from '../utils/hashHelper';\r\nimport ArtAlert from '../components/ArtAlert';\r\nimport LightBox from '../components/LightBox';\r\nimport ipfs from '../ipfs.js';\r\nimport HelperFunctions from '../utils/Util';\r\nimport Spinner from '../components/Spinner';\r\nimport ArtListItem from '../components/ArtListItem';\r\n\r\nimport '../styles/sidebar.scss';\r\nimport '../styles/drop-file.scss';\r\nimport { util } from 'chai';\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\n\r\nclass MarketPlaceSell extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            accounts: this.props.baseAppState.accounts,\r\n            contract: this.props.baseAppState.contract,\r\n            priceContract: this.props.baseAppState.priceFeed,\r\n            file: null,\r\n            buffer: null,\r\n            price: 0,\r\n            increment: 0,\r\n            ONE_MATIC: 0, //USD\r\n            PRICE_TO_USD: 0, //USD\r\n            name: '',\r\n            duration: 0,\r\n            artToView: {},\r\n            ipfsHash: '', //final hash\r\n            ipfsMultiHash: null,\r\n            artHash: [],\r\n            myAuctionedItems: [],\r\n            showFileLightBox: false,\r\n            loading: {\r\n                uploadFile: false,\r\n                addItemBtn: false,\r\n                fetchMyArtItems: false\r\n            },\r\n            error: {\r\n                uploadFile: '',\r\n                auctionedItems: '',\r\n                cancelAuction: ''\r\n            },\r\n            success: {\r\n                uploadFile: '',\r\n                auctionedItems: '',\r\n                cancelAuction: ''\r\n            }\r\n        };\r\n        this.fetchMyArtItems();\r\n        this.getFileBuffer = this.getFileBuffer.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openArt = this.openArt.bind(this);\r\n        this.cancelAuction = this.cancelAuction.bind(this);       \r\n        this.onFetchMyArtItems = this.onFetchMyArtItems.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.state.accounts){\r\n            this.setState({accounts: localStorage.getItem('accounts')});\r\n        }\r\n        // if(!this.state.contract){\r\n        //     this.setState({contract: localStorage.getItem('contract')});\r\n        // }\r\n        \r\n    }\r\n\r\n    componentWillMount= async ()=>{\r\n        const contract = this.state.contract;\r\n        if ( !contract ) {\r\n            let util = new HelperFunctions();\r\n            let response = await util.reloadContractAndAccounts();\r\n            this.setState({ web3: response.web3, accounts: response.accounts, contract: response.contract, priceContract: response.priceFeed });\r\n        }\r\n        this.getMaticPriceFeed();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // if(!this.state.accounts){\r\n        //     this.setState({accounts: this.props.baseAppState.accounts});\r\n        // }\r\n        setInterval(()=>{\r\n            if(!this.state.contract){\r\n                window.location.href='/marketplace/sell';\r\n            }\r\n        }, 5000); \r\n        \r\n        // \r\n        // console.log('contract', this.props.baseAppState.contract);\r\n    }\r\n\r\n    handleChange = (event)=>{\r\n        event.preventDefault();\r\n        let key = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({[key]: value});\r\n\r\n        if(key === 'price'){\r\n            let USDprice = value * this.state.ONE_MATIC;\r\n            this.setState({PRICE_TO_USD: USDprice});\r\n        }\r\n    }\r\n\r\n    getFileBuffer = () =>{\r\n        console.log('file loaded');\r\n        if(this.state.file){            \r\n            var file = this.state.file;\r\n            var reader = new FileReader()  //Convert to a buffer\r\n\r\n            reader.readAsArrayBuffer(file); //Parse file\r\n            reader.onload = () => {\r\n                this.convertToBuffer(reader);//Fired after reading operation is completed                            \r\n            }\r\n        }\r\n    }\r\n\r\n    //helper function for turning file to buffer\r\n    convertToBuffer = async (reader) => {\r\n        const buffer = Buffer(reader.result);\r\n        this.setState({buffer}, \r\n            console.log('file buffer', buffer));\r\n        \r\n    };\r\n\r\n    resetFileSelection = ()=>{\r\n        this.setState({buffer: null});\r\n        this.setState({file: null});\r\n    }\r\n\r\n    onFetchMyArtItems = event =>{\r\n        event.preventDefault();\r\n        this.fetchMyArtItems();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    getMaticPriceFeed = () =>{\r\n        // 1MATIC = 0.1949 USD (28-02-2021 2:28pm)       \r\n\r\n        //TEST NET\r\n        const contract = this.state.priceContract;\r\n        if(!this.state.accounts) return;\r\n        const account = this.state.accounts[0];    \r\n\r\n        contract.methods.getLatestPrice().call({from: account})\r\n        .then(result=>{\r\n            this.setState({ONE_MATIC: (result/100000000).toFixed(8)}, \r\n                console.log('price feed response', this.state.ONE_MATIC));\r\n        }).catch(error => {\r\n            console.log('getmaticPriceFeed error', error);\r\n        });\r\n    }\r\n\r\n    fetchMyArtItems = () =>{\r\n        console.log(\"fetch my art items method\");\r\n        this.setState(prevState => ({\r\n            loading: {\r\n                ...prevState.loading,\r\n                fetchMyArtItems: true\r\n        }}));\r\n        const contract = this.state.contract;\r\n        if(!this.state.accounts) return;\r\n        const account = this.state.accounts[0];        \r\n\r\n        // get added items through events emitted\r\n        contract.getPastEvents('LogAddItem', {\r\n            filter: {seller: account},  \r\n            fromBlock: 0,\r\n            toBlock: 'latest'\r\n        }, (error, events) => {       \r\n            if (!error){\r\n                console.log('events', events);                \r\n                \r\n                let oldMyAuctionedItems = [];\r\n                events.forEach(event => {\r\n                    let itemId = event.returnValues[0];\r\n                    let name = event.returnValues[1];\r\n                    let seller = event.returnValues[2];\r\n                    let price = event.returnValues[3];\r\n                    let created = event.returnValues[4];\r\n                    let expiry = event.returnValues[5];\r\n\r\n                    //check for existing bids on item, and update price with current highest bid on the item\r\n                    //address indexed bidder, uint indexed artItemId, uint bid, address indexed highestBidder, uint highestBid, uint highestBindingBid);  \r\n                    contract.getPastEvents('LogBid', {\r\n                        filter: {artItemId: itemId},  \r\n                        fromBlock: 0,\r\n                        toBlock: 'latest'\r\n                    }, (error, events) => {       \r\n                        if (!error){\r\n                            console.log('events', events); \r\n\r\n                            //pick the last bid on item\r\n                            let lastBid = events[events.length - 1];\r\n                            if(lastBid){\r\n                                let lastBidCurrentHighestBid = lastBid.returnValues[4];\r\n                                if(lastBidCurrentHighestBid){\r\n                                    price = lastBidCurrentHighestBid;\r\n                                }\r\n                            }\r\n                        }}\r\n                    );\r\n\r\n                    // check auction status\r\n                    let response = this.getArtItem(itemId);\r\n                    response.then(result =>{\r\n                        console.log('get art ',result);\r\n                        if(result){\r\n                            let isCancelled = result[6];     \r\n                            console.log('item cancel status: '+name, isCancelled);                       \r\n                            if(!isCancelled){\r\n                                oldMyAuctionedItems.push({itemId: itemId, name: name, owner: seller, price: price, created: created, expiry: expiry});\r\n                            }\r\n                        }   \r\n                        this.setState({myAuctionedItems: oldMyAuctionedItems}, console.log('myAuctionedItems: ', this.state.myAuctionedItems));\r\n\r\n                    }).catch(error=>{\r\n                        console.log('get art item for fetchMyArtItems error', error);\r\n                    });                         \r\n                });                \r\n            }\r\n            else {\r\n                console.log(error)\r\n            }\r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    fetchMyArtItems: false\r\n            }}));\r\n        });\r\n    }\r\n\r\n    addArtItem(){\r\n        \r\n        let contract = this.state.contract;\r\n        if(typeof contract === 'string' && typeof contract !== 'object' && typeof contract !== null){\r\n            contract = JSON.parse(contract);\r\n        }\r\n        console.log('add item contract', contract);\r\n        const account = this.state.accounts[0];\r\n        console.log('add item account', account);\r\n\r\n        let hashHelper = new HashHelper();\r\n        let util = new HelperFunctions();\r\n\r\n        let IPFShash = hashHelper.getBytes32FromIpfsHash(this.state.ipfsHash);\r\n        let price = this.state.price;\r\n        let increment = this.state.increment;\r\n        let name = this.state.name;\r\n        let duration = util.ConvertHoursToSeconds(this.state.duration);        \r\n\r\n        if(isNaN(price) || isNaN(duration) || isNaN(increment) || !isNaN(name)){\r\n            console.log(\"invalid input was detected!\");\r\n            return null;\r\n        }\r\n\r\n        console.log('art item details:: ', name, IPFShash, price, increment, duration);\r\n\r\n        let response = contract.methods.addArtItem(price, IPFShash, increment, duration, name).send({from: account});\r\n        \r\n        response.then(result => {\r\n            console.log('add art: ', result);\r\n            if(result.status && result.events.LogAddItem){\r\n                let oldMyAuctionedItems = this.state.myAuctionedItems;\r\n                oldMyAuctionedItems.push({name: name, ipfs: this.state.ipfsHash, price: price, increment: increment, created: util.GetUNIXTimeFromDate(Date.now()), expiry: duration});\r\n                this.setState({myAuctionedItems: oldMyAuctionedItems});\r\n                this.setState(prevState => ({\r\n                    success: {\r\n                        ...prevState.success,\r\n                        uploadFile: 'Success — New Art Item was added successfully!'\r\n                }}));\r\n            }else{\r\n                this.setState(prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        uploadFile: 'Error — A minor error occured. Take a look at the log'\r\n                }})); \r\n            }\r\n        }).catch(error=>{\r\n            console.log('add art item error: ', error);\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: error.message\r\n            }})); \r\n        });         \r\n    }\r\n\r\n    resetMessage = () =>{\r\n        let errors = Object.keys(this.state.error);\r\n        for(var propIndex in errors){\r\n\r\n            let prop = errors[propIndex];\r\n            console.log(prop);\r\n\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    [prop]: ''\r\n            }}));\r\n            \r\n            //console.log(this.state.error);\r\n        }\r\n        \r\n        //this.setState({success: null});\r\n    }\r\n\r\n    resetInputs = () => {\r\n        this.setState({price: 0});\r\n        this.setState({duration: 0});\r\n        this.setState({increment: 0});\r\n        this.setState({name: ''});\r\n    }\r\n\r\n    resetDocumentSelection = ()=>{\r\n        this.setState({buffer: null});\r\n        this.setState({file: null});\r\n    }\r\n\r\n    onIPFSSubmit = async(event)=>{\r\n        event.preventDefault();\r\n        // this.resetMessage();\r\n        this.setState(prevState => ({\r\n            loading: {\r\n                ...prevState.loading,\r\n                addItemBtn: true\r\n        }}));        \r\n        console.log(\"Submitting file to ipfs\");        \r\n\r\n        let price = this.state.price;\r\n        let increment = this.state.increment;\r\n        let duration = this.state.duration;\r\n        let name = this.state.name;\r\n        \r\n        if(!this.state.accounts){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Your account is not yet loaded. You may refresh page of it persists.'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n        \r\n        if(!increment || !duration || !price || name === ''){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Incomplete Details — All fields are required!'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n\r\n        // validate data\r\n        let validator = new Validator();\r\n\r\n        if(!validator.isValidPrice(price)){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid Price — Minimum auction price must be a number that is not less than 0!'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n\r\n        if(!validator.isValidIncrement(increment)){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid Increment — Increment must be a number between 0-100!'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n\r\n        if(!validator.isValidDuration(duration)){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid Duration — Auction duration (in hours) must be a number between 1-168!'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n\r\n        if(!validator.isValidName(name)){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid Name — Art name cannot be a number!'\r\n            }})); \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            loading: {\r\n                ...prevState.loading,\r\n                uploadFile: true\r\n        }}));        \r\n\r\n        if(!this.state.file){\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid File Selection — Please re-select your art file'\r\n            }})); \r\n        }\r\n        const bufferData = this.state.buffer;\r\n        console.log('bufferData', bufferData);\r\n        if(bufferData){\r\n            ipfs.add(bufferData)\r\n            .then((ipfsHash) => {\r\n                console.log(ipfsHash);\r\n                this.setState({ipfsHash: ipfsHash.path});\r\n                this.setState({ipfsMultiHash: ipfsHash.cid.multihash});\r\n                \r\n                this.setState(prevState => ({\r\n                    loading: {\r\n                        ...prevState.loading,\r\n                        uploadFile: false\r\n                }}), this.resetDocumentSelection());\r\n\r\n                //TODO: send to blockchain\r\n                this.addArtItem();\r\n\r\n                // this.setState(prevState => ({\r\n                //     success: {\r\n                //         ...prevState.success,\r\n                //         uploadFile: 'Your Art has been successfully added!'\r\n                // }})); \r\n                this.resetInputs();\r\n                console.log('complete ipfs upload');                \r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState(prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        uploadFile: 'Error occured while uploading art to IPFS. Check your connection or Reload the page and try again.'\r\n                }})); \r\n            })\r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n        }else{\r\n            console.log('no file was selected. reload page and re-select file');\r\n            \r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    uploadFile: 'Invalid File Selection — Please re-select your art file'\r\n            }})); \r\n            \r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    uploadFile: false\r\n            }}), this.resetDocumentSelection());\r\n            this.setState(prevState => ({\r\n                loading: {\r\n                    ...prevState.loading,\r\n                    addItemBtn: false\r\n            }}));\r\n            return;\r\n        }        \r\n    };\r\n\r\n    getArtItem = (itemId)=>{\r\n        console.log(\"get bid method\");\r\n        const contract = this.state.contract;\r\n        if(!this.state.accounts) return;\r\n        const account = this.state.accounts[0];    \r\n        console.log('open art item');\r\n        console.log('contract', contract);\r\n        console.log('accout', account);\r\n        console.log(itemId);\r\n        return contract.methods.getArtItem(itemId).call({from: account});\r\n    }\r\n\r\n    OnCloseLightBox = () => {\r\n        this.setState({showFileLightBox: false});\r\n    }\r\n\r\n    openArt=(itemId, ipfsHash, name)=> event=>{\r\n        let hashHelper = new HashHelper();\r\n        event.stopPropagation();\r\n        // console.log('open art item');\r\n        console.log('open art details', ipfsHash, name);\r\n\r\n        if(ipfsHash && name){// just added art\r\n            console.log('open new added art');\r\n            console.log(ipfsHash, name);\r\n            let ref = hashHelper.getIpfsHashFromBytes32(ipfsHash);\r\n            this.setState({artToView: {ipfsHash: ref, name: name}}, this.setState({showFileLightBox: true}));\r\n\r\n        }else{//fetched arts\r\n            //get art name and ipfs hash\r\n            let response = this.getArtItem(itemId);\r\n            response.then(result =>{\r\n                console.log('get art ',result);\r\n                if(result){\r\n                    let artName = result[7];\r\n                    let artIPFShash = result[2];\r\n\r\n                    let ref = hashHelper.getIpfsHashFromBytes32(artIPFShash);\r\n\r\n                    this.setState({artToView: {ipfsHash: ref, name: artName}}, this.setState({showFileLightBox: true}));\r\n                }\r\n            }).catch(error=>{\r\n                console.log(error);\r\n            });\r\n        }\r\n                        \r\n    }\r\n\r\n    cancelAuction =(itemId) => event=>{\r\n        event.preventDefault();\r\n        let contract = this.state.contract;\r\n        if(typeof contract === 'string' && typeof contract !== 'object' && typeof contract !== null){\r\n            contract = JSON.parse(contract);\r\n        }\r\n        console.log('cancel aution contract', contract);\r\n        const account = this.state.accounts[0];\r\n        console.log('cancel aution account', account);\r\n\r\n        let response = contract.methods.cancelAuction(itemId).send({from: account});\r\n        \r\n        response.then(result => {\r\n            console.log('cancel aution: ', result);\r\n            if(result.status && result.events.LogCanceled){\r\n                this.setState(prevState => ({\r\n                    success: {\r\n                        ...prevState.success,\r\n                        cancelAuction: 'Success — Auction was successfully canceled!'\r\n                }}));\r\n\r\n                //remove from UI\r\n                let itemIndex = this.state.myAuctionedItems.findIndex(item => item.itemId === itemId);\r\n                if(itemIndex > -1){\r\n                    let myAuctions = this.state.myAuctionedItems;\r\n                    myAuctions.splice(itemIndex, 1);\r\n                    this.setState({myAuctionedItems: myAuctions});\r\n                }\r\n\r\n            }else{\r\n                this.setState(prevState => ({\r\n                    error: {\r\n                        ...prevState.error,\r\n                        cancelAuction: 'Error — A minor error occured. Take a look at the log'\r\n                }})); \r\n            }\r\n        }).catch(error=>{\r\n            console.log('cancel aution error: ', error);\r\n            this.setState(prevState => ({\r\n                error: {\r\n                    ...prevState.error,\r\n                    cancelAuction: error.message\r\n            }})); \r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let util = new HelperFunctions();\r\n        const timeAgo = new TimeAgo('en-US');\r\n        \r\n        return (            \r\n            <div>\r\n                {this.state.showFileLightBox ? \r\n                    <LightBox toView={this.state.artToView} closeLightBoxCallback={this.OnCloseLightBox} />: null\r\n                    }\r\n                <MDBContainer className=\"page-container\">                \r\n                <MDBRow>\r\n                    <MDBCol md=\"3\">\r\n                        <div className={`drop-file ${this.state.file ? \"file-loaded\" : \"\"}`}>\r\n                            <MDBAnimation type=\"bounce-in\">                                \r\n                                <Dropzone onDrop={acceptedFiles => this.setState({file: acceptedFiles[0]}, this.getFileBuffer)}>\r\n                                    {({getRootProps, getInputProps}) => (                                \r\n                                        <MDBCard {...getRootProps()}>\r\n                                            <section className=\"m-3\">\r\n                                                <input {...getInputProps()} />\r\n                                                <MDBIcon icon=\"cloud-upload-alt\" size=\"4x\" />\r\n                                                <p className=\"\">{this.state.file ? \"File loaded. Fill the Art Auction Information\" : <span>Drag 'n' drop your art file HERE,<br /><br />OR<br /><br />Click to select</span>}</p>\r\n                                            </section>\r\n                                        </MDBCard>                                \r\n                                    )}\r\n                                </Dropzone>\r\n                                \r\n                            </MDBAnimation>                     \r\n                        </div>\r\n                    </MDBCol>\r\n                    <MDBCol md='6' className=\"px-4\">\r\n                        <form>\r\n                            <h1>Marketplace Sell</h1>\r\n                            <hr />\r\n                            <h6><b>Art Auction Details</b></h6>\r\n                            <MDBRow>\r\n                                {this.state.error.uploadFile ? \r\n                                    <ArtAlert onCloseCallback={this.resetMessage} type=\"danger\" message={this.state.error.uploadFile} />                                        \r\n                                :null}\r\n                                {this.state.success.uploadFile ? \r\n                                <ArtAlert onCloseCallback={this.resetMessage} type=\"success\" message={this.state.success.uploadFile} />                                        \r\n                                :null}      \r\n                                {this.state.error.cancelAuction ? \r\n                                    <ArtAlert onCloseCallback={this.resetMessage} type=\"danger\" message={this.state.error.cancelAuction} />                                        \r\n                                :null}\r\n                                {this.state.success.cancelAuction ? \r\n                                <ArtAlert onCloseCallback={this.resetMessage} type=\"success\" message={this.state.success.cancelAuction} />                                        \r\n                                :null}  \r\n                                <MDBCol md='6'>\r\n                                    <label htmlFor=\"name\" className=\"grey-text mt-2\">\r\n                                        Name\r\n                                    </label>\r\n                                    <input type=\"text\" value={this.state.name} onChange={this.handleChange} id=\"name\" name=\"name\" className=\"form-control\" />\r\n                                </MDBCol>                          \r\n                                <MDBCol md='6'>\r\n                                    <label htmlFor=\"minPrice\" className=\"grey-text mt-2\">\r\n                                        Min. Price (MATIC)\r\n                                    </label>\r\n                                    <span className=\"usd-price\"> ~ {new Intl.NumberFormat().format(this.state.PRICE_TO_USD.toFixed(2))} USD</span>\r\n                                    <input type=\"number\" value={this.state.price} min={0} onChange={this.handleChange} id=\"minPrice\" name=\"price\" className=\"form-control\" />\r\n                                </MDBCol>\r\n                                \r\n                            </MDBRow>\r\n                            <MDBRow>\r\n                                <MDBCol md='6'>\r\n                                    <label htmlFor=\"increment\" className=\"grey-text mt-2\">\r\n                                        Increment (1-100)\r\n                                    </label>\r\n                                    <input type=\"number\" value={this.state.increment} min={0} onChange={this.handleChange} id=\"increment\" name=\"increment\" className=\"form-control\" />\r\n                                </MDBCol>\r\n                                <MDBCol md='6'>\r\n                                    <label htmlFor=\"duration\" className=\"grey-text mt-2\">\r\n                                        Auction Duration (in hours:: 0-168)\r\n                                    </label>\r\n                                    <input type=\"number\" value={this.state.duration} min={0} onChange={this.handleChange} id=\"duration\" name=\"duration\" className=\"form-control\" />\r\n                                </MDBCol>\r\n                            </MDBRow>                            \r\n                            <MDBRow>\r\n                                <MDBContainer className=\"mt-3\">\r\n                                    <MDBBtn onClick={this.onIPFSSubmit} block color=\"info\" >{this.state.loading.addItemBtn || this.state.loading.uploadFile ? <Spinner size=\"small\"/> : <span>Add Art Item</span> }</MDBBtn>\r\n                                </MDBContainer>\r\n                            </MDBRow>\r\n                        </form>\r\n                    </MDBCol>\r\n                    <MDBCol md='3' style={{marginTop: '0px'}}>\r\n                        <h4>My Auctioned Arts</h4>\r\n                        <hr />\r\n                        <div className=\"art-side-bar-wrapper pr-2\">\r\n                            {this.state.myAuctionedItems && this.state.myAuctionedItems.length > 0 ?\r\n                                this.state.myAuctionedItems.map((item, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <span className=\"cancel-auction-btn\" onClick={this.cancelAuction(item.itemId)}>CANCEL</span>\r\n                                            <span onClick={this.openArt(item.itemId, item.ipfs, item.name)}>\r\n                                                <ArtListItem\r\n                                                    key={index}\r\n                                                    artTitle={item.name} \r\n                                                    currentHighestBid={item.price} \r\n                                                    timeLeft={timeAgo.format(util.GetDateFromUNIXTime(Number(item.created) + Number(item.expiry)), 'twitter')} \r\n                                                    // onCancelCallback={this.cancelAuction(item.itemId)}                                        \r\n                                                />\r\n                                            </span>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            : \r\n                            <>\r\n                                <h6>You currently have no auctioned items</h6>\r\n                                <MDBBtn onClick={this.onFetchMyArtItems} block color=\"info\" >{this.state.loading.fetchMyArtItems ? <Spinner size=\"small\"/> : <span>Manually Fetch Art Items</span> }</MDBBtn>\r\n                            </>}\r\n                        </div>\r\n                    </MDBCol>\r\n                </MDBRow>               \r\n            </MDBContainer>\r\n        \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default MarketPlaceSell;"]},"metadata":{},"sourceType":"module"}