{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _data = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, options = {}) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.post('object/data', {\n              timeout: options.timeout,\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: \"\".concat(cid instanceof Uint8Array ? new CID(cid) : cid)\n              }, options)),\n              headers: options.headers\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.arrayBuffer();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", new Uint8Array(data, 0, data.byteLength));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    function data(_x) {\n      return _data.apply(this, arguments);\n    }\n\n    return data;\n  }();\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/object/data.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","cid","options","post","timeout","signal","searchParams","arg","Uint8Array","headers","res","arrayBuffer","data","byteLength"],"mappings":"AAAA;;;;;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AAAA,yEAAO,iBAAqBC,GAArB,EAA0BC,OAAO,GAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaF,GAAG,CAACG,IAAJ,CAAS,aAAT,EAAwB;AACxCC,cAAAA,OAAO,EAAEF,OAAO,CAACE,OADuB;AAExCC,cAAAA,MAAM,EAAEH,OAAO,CAACG,MAFwB;AAGxCC,cAAAA,YAAY,EAAET,iBAAiB;AAC7BU,gBAAAA,GAAG,YAAKN,GAAG,YAAYO,UAAf,GAA4B,IAAId,GAAJ,CAAQO,GAAR,CAA5B,GAA2CA,GAAhD;AAD0B,iBAE1BC,OAF0B,EAHS;AAOxCO,cAAAA,OAAO,EAAEP,OAAO,CAACO;AAPuB,aAAxB,CADb;;AAAA;AACCC,YAAAA,GADD;AAAA;AAAA,mBAUcA,GAAG,CAACC,WAAJ,EAVd;;AAAA;AAUCC,YAAAA,IAVD;AAAA,6CAYE,IAAIJ,UAAJ,CAAeI,IAAf,EAAqB,CAArB,EAAwBA,IAAI,CAACC,UAA7B,CAZF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA,aAAsBD,IAAtB;AAAA;AAAA;;AAAA,WAAsBA,IAAtB;AAAA;AAcD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? new CID(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}