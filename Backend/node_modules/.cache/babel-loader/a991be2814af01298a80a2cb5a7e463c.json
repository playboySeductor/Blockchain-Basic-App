{"ast":null,"code":"var config = require('../config');\n\nvar flag = require('./flag');\n\nvar getProperties = require('./getProperties');\n\nvar isProxyEnabled = require('./isProxyEnabled');\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' && config.proxyExcludedKeys.indexOf(property) === -1 && !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' + property + '. See docs for proper usage of \"' + nonChainableMethodName + '\".');\n        } // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n\n\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function (prop) {\n          if (!Object.prototype.hasOwnProperty(prop) && builtins.indexOf(prop) === -1) {\n            var dist = stringDistanceCapped(property, prop, suggestionDistance);\n\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property + '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      } // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n\n\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = []; // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n\n      memo[i][j] = Math.min(memo[i - 1][j] + 1, memo[i][j - 1] + 1, memo[i - 1][j - 1] + (ch === strB.charCodeAt(j - 1) ? 0 : 1));\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/chai/lib/chai/utils/proxify.js"],"names":["config","require","flag","getProperties","isProxyEnabled","builtins","module","exports","proxify","obj","nonChainableMethodName","Proxy","get","proxyGetter","target","property","proxyExcludedKeys","indexOf","Reflect","has","Error","suggestion","suggestionDistance","forEach","prop","Object","prototype","hasOwnProperty","dist","stringDistanceCapped","strA","strB","cap","Math","abs","length","memo","i","Array","fill","j","ch","charCodeAt","min"],"mappings":"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","sourcesContent":["var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n"]},"metadata":{},"sourceType":"script"}