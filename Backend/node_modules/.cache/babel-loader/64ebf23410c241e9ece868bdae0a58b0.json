{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nconst multiaddr = require('multiaddr');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options = {}) {\n      var res, _yield$res$json, Addrs;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.post('swarm/addrs', {\n              timeout: options.timeout,\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            _yield$res$json = _context.sent;\n            Addrs = _yield$res$json.Addrs;\n            return _context.abrupt(\"return\", Object.keys(Addrs).map(id => ({\n              id,\n              addrs: (Addrs[id] || []).map(a => multiaddr(a))\n            })));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function () {\n      return _ref.apply(this, arguments);\n    };\n  }();\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/swarm/addrs.js"],"names":["multiaddr","require","configure","toUrlSearchParams","module","exports","api","options","post","timeout","signal","searchParams","headers","res","json","Addrs","Object","keys","map","id","addrs","a"],"mappings":"AAAA;;;;;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AAAA,wEAAO,iBAAOC,OAAO,GAAG,EAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaD,GAAG,CAACE,IAAJ,CAAS,aAAT,EAAwB;AACxCC,cAAAA,OAAO,EAAEF,OAAO,CAACE,OADuB;AAExCC,cAAAA,MAAM,EAAEH,OAAO,CAACG,MAFwB;AAGxCC,cAAAA,YAAY,EAAER,iBAAiB,CAACI,OAAD,CAHS;AAIxCK,cAAAA,OAAO,EAAEL,OAAO,CAACK;AAJuB,aAAxB,CADb;;AAAA;AACCC,YAAAA,GADD;AAAA;AAAA,mBAOmBA,GAAG,CAACC,IAAJ,EAPnB;;AAAA;AAAA;AAOGC,YAAAA,KAPH,mBAOGA,KAPH;AAAA,6CASEC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuBC,EAAE,KAAK;AACnCA,cAAAA,EADmC;AAEnCC,cAAAA,KAAK,EAAE,CAACL,KAAK,CAACI,EAAD,CAAL,IAAa,EAAd,EAAkBD,GAAlB,CAAsBG,CAAC,IAAIrB,SAAS,CAACqB,CAAD,CAApC;AAF4B,aAAL,CAAzB,CATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst multiaddr = require('multiaddr')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  return async (options = {}) => {\n    const res = await api.post('swarm/addrs', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id,\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\n    }))\n  }\n})\n"]},"metadata":{},"sourceType":"script"}