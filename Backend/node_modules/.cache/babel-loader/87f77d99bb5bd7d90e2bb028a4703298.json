{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist')>}\n   */\n  function wantlist() {\n    return _wantlist.apply(this, arguments);\n  }\n\n  function _wantlist() {\n    _wantlist = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options = {}) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api.post('bitswap/wantlist', {\n              timeout: options.timeout,\n              signal: options.signal,\n              searchParams: toUrlSearchParams(options),\n              headers: options.headers\n            });\n\n          case 2:\n            _context.next = 4;\n            return _context.sent.json();\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", (res.Keys || []).map(k => new CID(k['/'])));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _wantlist.apply(this, arguments);\n  }\n\n  return wantlist;\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/bitswap/wantlist.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","wantlist","options","post","timeout","signal","searchParams","headers","json","res","Keys","map","k"],"mappings":"AAAA;;;;;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIjBC,QAJiB;AAAA;AAAA;;AAAA;AAAA,yEAIhC,iBAAyBC,OAAO,GAAG,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC2BF,GAAG,CAACG,IAAJ,CAAS,kBAAT,EAA6B;AACpDC,cAAAA,OAAO,EAAEF,OAAO,CAACE,OADmC;AAEpDC,cAAAA,MAAM,EAAEH,OAAO,CAACG,MAFoC;AAGpDC,cAAAA,YAAY,EAAET,iBAAiB,CAACK,OAAD,CAHqB;AAIpDK,cAAAA,OAAO,EAAEL,OAAO,CAACK;AAJmC,aAA7B,CAD3B;;AAAA;AAAA;AAAA,iCAMMC,IANN;;AAAA;AACQC,YAAAA,GADR;AAAA,6CAQS,CAACA,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBC,GAAjB,CAAqBC,CAAC,IAAI,IAAIlB,GAAJ,CAAQkB,CAAC,CAAC,GAAD,CAAT,CAA1B,CART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAchC,SAAOX,QAAP;AACD,CAfyB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/wantlist')>}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map(k => new CID(k['/']))\n  }\n  return wantlist\n})\n"]},"metadata":{},"sourceType":"script"}