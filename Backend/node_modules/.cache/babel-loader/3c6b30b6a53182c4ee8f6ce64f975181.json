{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _wrapAsyncGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _awaitAsyncGenerator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _asyncIterator = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _asyncGeneratorDelegate = require(\"C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nconst toIterable = require('stream-to-it/source');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/read')>}\n   */\n  function read(_x) {\n    return _read.apply(this, arguments);\n  }\n\n  function _read() {\n    _read = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(path, options = {}) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _awaitAsyncGenerator(api.post('files/read', {\n              timeout: options.timeout,\n              signal: options.signal,\n              searchParams: toUrlSearchParams(_objectSpread({\n                arg: path,\n                count: options.length\n              }, options)),\n              headers: options.headers\n            }));\n\n          case 2:\n            res = _context.sent;\n            return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(toIterable(res.body)), _awaitAsyncGenerator), \"t0\", 4);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return _read.apply(this, arguments);\n  }\n\n  return read;\n});","map":{"version":3,"sources":["C:/Users/SAINIK/Desktop/LEARNING BTC/NFT-Auction-Marketplace/node_modules/ipfs-http-client/src/files/read.js"],"names":["toIterable","require","configure","toUrlSearchParams","module","exports","api","read","path","options","post","timeout","signal","searchParams","arg","count","length","headers","res","body"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AAHkC,WAIfC,IAJe;AAAA;AAAA;;AAAA;AAAA,uEAIhC,iBAAuBC,IAAvB,EAA6BC,OAAO,GAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACoBH,GAAG,CAACI,IAAJ,CAAS,YAAT,EAAuB;AACvCC,cAAAA,OAAO,EAAEF,OAAO,CAACE,OADsB;AAEvCC,cAAAA,MAAM,EAAEH,OAAO,CAACG,MAFuB;AAGvCC,cAAAA,YAAY,EAAEV,iBAAiB;AAC7BW,gBAAAA,GAAG,EAAEN,IADwB;AAE7BO,gBAAAA,KAAK,EAAEN,OAAO,CAACO;AAFc,iBAG1BP,OAH0B,EAHQ;AAQvCQ,cAAAA,OAAO,EAAER,OAAO,CAACQ;AARsB,aAAvB,CADpB;;AAAA;AACQC,YAAAA,GADR;AAYE,iFAAQlB,UAAU,CAACkB,GAAG,CAACC,IAAL,CAAlB;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA,KAJgC;AAAA;AAAA;;AAmBhC,SAAOZ,IAAP;AACD,CApByB,CAA1B","sourcesContent":["'use strict'\n\nconst toIterable = require('stream-to-it/source')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/files/read')>}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n\n  return read\n})\n"]},"metadata":{},"sourceType":"script"}